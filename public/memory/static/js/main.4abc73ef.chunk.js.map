{"version":3,"sources":["Components/Card.jsx","ultis/data.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","onClick","flip","indx","src","isFinish","finish","isSelected","front","back","isFlip","onAnimationEnd","select","alt","makeData","pokemon_data","concat","map","img","sort","a","b","Math","random","App","state","data","selected","bind","check","fold","time","setTimeout","setState","oldState","newState","JSON","parse","stringify","pokemon","this","filter","length","console","log","poke","val","link","key","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4abc73ef.chunk.js","sourcesContent":["import React from 'react'\nimport '../assets/css/Card.css'\n// const front = 'https://upload.wikimedia.org/wikipedia/vi/thumb/f/f7/Sugimoris025.png/220px-Sugimoris025.png'\nexport function Card(props) {\n\n    return (\n        <div className=\"card-area \" onClick={() => props.flip(props.indx, 1)}>\n            <img className=\"card-image\"\n                src={props.isFinish ? props.finish : props.isSelected ? props.front : props.back}\n                flip={props.isFlip}\n                onAnimationEnd={() => { props.flip(props.indx, 0); props.select(props.indx) }}\n                alt=\"pikachu\" />\n\n        </div >\n    )\n\n\n}\n","export function makeData() {\n    const back = 'https://upload.wikimedia.org/wikipedia/vi/3/3b/Pokemon_Trading_Card_Game_cardback.jpg'\n    const finish = 'https://media.istockphoto.com/illustrations/cartoon-finish-sign-illustration-id478290143'\n    let pokemon_data = [\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/001.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/002.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/003.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/004.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/005.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/006.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/007.png',\n        'https://assets.pokemon.com/assets/cms2/img/pokedex/full/008.png',\n    ]\n    pokemon_data = [].concat(pokemon_data, pokemon_data)\n    pokemon_data = pokemon_data.map(img => {\n        return {\n            front: img,\n            back: back,\n            finish: finish,\n            isFlip: 0,\n            isFinish: false,\n            isSelected:false\n        }\n    })\n    pokemon_data.sort((a, b) => Math.random() - Math.random())\n    return pokemon_data\n}\n\n","import './App.css';\nimport { Card } from './Components/Card'\nimport { Component } from 'react'\nimport { makeData } from \"./ultis/data\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: makeData(),\n      selected: []\n    }\n    this.select = this.select.bind(this)\n    this.flip = this.flip.bind(this)\n    this.check = this.check.bind(this)\n    this.fold = this.fold.bind(this)\n  }\n  fold(time) {\n    // time is delay time for player watching image\n    setTimeout(() => {\n      this.setState(oldState => {\n        let newState = JSON.parse(JSON.stringify(oldState))\n        newState.data = newState.data.map((pokemon) => {\n          return {\n            ...pokemon,\n            isSelected: false,\n          }\n        })\n        return newState\n      })\n    }, time)\n\n  }\n  check() {\n    let selected = this.state.data.filter(({ isSelected }) => isSelected === true)\n    if (selected.length === 2) {\n      if (selected[0].front === selected[1].front) {\n        console.log('match')\n        // change selected cards to finish state, not allowed to selected again\n        setTimeout(() => {\n          this.setState((oldState) => {\n            let newState = JSON.parse(JSON.stringify(oldState))\n            newState.data = newState.data.map(poke => {\n              if (poke.front === selected[0].front) {\n                poke.isFinish = true\n              }\n              return poke\n            })\n            return newState\n          })\n        },500)\n      }\n      this.fold(500)\n    } else {\n      console.log('pass')\n    }\n  }\n\n  select(indx) {\n    this.setState((oldState) => {\n      let newState = JSON.parse(JSON.stringify(oldState))\n      if (!newState.data[indx].isFinish) {\n        newState.data[indx].isSelected = !newState.data[indx].isSelected\n      }\n      return {\n        ...newState\n      }\n    }, this.check)\n  }\n  flip(indx, val) {\n    // console.log(`flip ${indx} ${val}`)\n    this.setState(oldState => {\n      let data = JSON.parse(JSON.stringify(oldState.data))\n      data[indx].isFlip = val\n      return {\n        data: data\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app-cont \">\n        {\n          this.state.data.map((link, indx) => {\n            return <Card {...link} indx={indx} key={indx} select={this.select} flip={this.flip} />\n          })\n        }\n      </div>\n    );\n  }\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}