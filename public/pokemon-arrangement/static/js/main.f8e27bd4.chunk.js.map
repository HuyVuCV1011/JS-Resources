{"version":3,"sources":["Components/Pokemon.jsx","Components/Collection.jsx","Components/Section.jsx","Components/SectionList.jsx","pokemondata.js","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","className","draggable","onDragStart","e","console","log","indx","dataTransfer","setData","type","src","avatar","alt","Collection","onDragOver","preventDefault","onDrop","move","getData","remain","map","val","filter","pokemons","key","Section","SectionList","fire","water","grass","pokemon","App","state","bind","from","to","index","this","setState","oldState","tempState","JSON","parse","stringify","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8e27bd4.chunk.js","sourcesContent":["import '../assets/css/Pokemon.css'\nexport function Pokemon(props) {\n    // console.log(props)\n    return (\n        // allow to drag pokemon image\n        <div className=\"pokemon-cont\"\n            draggable=\"true\"\n            onDragStart={(e) => {\n                console.log(props.indx)\n                // tranfer data\n                e.dataTransfer.setData('from', props.type)\n                e.dataTransfer.setData('indx', props.indx)\n            }}\n        >\n            <img src={props.avatar} alt={props.avatar}/>\n        </div>\n    )\n}","import '../assets/css/Collection.css'\nimport { Pokemon } from './Pokemon'\nexport function Collection(props) {\n    return (\n        <div className=\"border collection-cont\"\n        // must prevent dragOver to enable Drop event\n            onDragOver={(e) => e.preventDefault()}\n            onDrop={(e) => {\n                props.move(e.dataTransfer.getData('from'), props.type, e.dataTransfer.getData('indx'))\n            }}>\n            {\n                // if value is zero (the pokemon i-th not in the list)\n                // return -1 , otherwise return it's index\n                props.remain.map((val, indx) => {\n                    if (val !== 0) return indx\n                    return -1\n                })\n                // select only not -1 \n                    .filter(val => val !== -1)\n                    .map((val) => {\n                        // console.log(val)\n                        return (\n                            <Pokemon {...props.pokemons[val]} key={val} indx={val} type={props.type} />\n                        )\n                    })\n            }\n        </div>\n    )\n}","import '../assets/css/Section.css'\nimport { Pokemon } from './Pokemon'\nexport function Section(props) {\n    return (\n        <div className=\"section-cont\">\n            <div className={` type-cont ${props.type}`}>\n                <p>{props.type || 'Fire'}</p>\n            </div>\n            <div className=\"pokemons-cont\"\n                onDrop={(e) => {\n                    console.log('this is on drop')\n                    props.move(e.dataTransfer.getData('from'), props.type, e.dataTransfer.getData('indx'))\n                }}\n                onDragOver={(e) => {\n                    e.preventDefault()\n                    // console.log('over')\n                }}\n                >\n                {\n                    // if value is zero (the pokemon i-th not in the list)\n                    // return -1 , otherwise return it's index\n                    props[props.type].map((val, indx) => {\n                        if (val !== 0) return indx\n                        return -1\n                    })\n                        // select only not -1 \n\n                        .filter(val => val !== -1)\n                        .map((val) => {\n                            // console.log(val)\n                            return (\n                                <Pokemon {...props.pokemons[val]} indx={val} key={val} type={props.type} />\n                            )\n                        })\n                }\n            </div>\n        </div>\n    )\n}","import '../assets/css/SectionList.css'\nimport { Section } from '../Components/Section'\nexport function SectionList(props) {\n    return (\n        <div className=\"section-list-cont\">\n            <Section type=\"fire\" pokemons={props.pokemons} fire={props.fire} move={props.move} />\n            <Section type=\"water\" pokemons={props.pokemons} water={props.water} move={props.move} />\n            <Section type=\"grass\" pokemons={props.pokemons} grass={props.grass} move={props.move} />\n        </div>\n    )\n}","export let pokemon = [\n    {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/114.png',\n      type: ['grass']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/008.png',\n      type: ['water']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/009.png',\n      type: ['water']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/038.png',\n      type: ['fire']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/152.png',\n      type: ['grass']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/155.png',\n      type: ['fire']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/158.png',\n      type: ['water']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/182.png',\n      type: ['grass']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/186.png',\n      type: ['water']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/240.png',\n      type: ['fire']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/254.png',\n      type: ['grass']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/258.png',\n      type: ['water']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/331.png',\n      type: ['grass']\n    }, {\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/285.png',\n      type: ['grass']\n    },{\n      avatar: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/341.png',\n      type: ['water']\n    }\n  ]","import './App.css'\nimport { Component } from 'react'\nimport { Collection } from './Components/Collection'\nimport { SectionList } from './Components/SectionList'\nimport { pokemon } from './pokemondata'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pokemons: pokemon,\n      remain:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      fire:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      water: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      grass: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    }\n    this.move = this.move.bind(this)\n  }\n  move(from, to, index) {\n    console.log(from,to,index)\n    this.setState((oldState) => {\n      let tempState = JSON.parse(JSON.stringify(oldState))\n      if (tempState[from][index] === 1) {\n        tempState[from][index] = 0\n        tempState[to][index] = 1\n        return tempState\n      }\n    })\n\n  }\n  render() {\n    return (\n      <div className=\"app-cont\">\n        <Collection pokemons={pokemon} type=\"remain\" remain={this.state.remain} move={this.move}/>\n        <SectionList pokemons={pokemon} fire={this.state.fire} water={this.state.water} grass={this.state.grass} move={this.move} />\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}